name: Ansible Deploy

on:
  workflow_dispatch:

jobs:
  setup-environment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies (Ansible, Terraform, kubectl, AWS CLI, ArgoCD, Java)
        run: |
          echo "🔹 Installing dependencies..."

          # Install Ansible
          sudo apt-get update
          sudo apt-get install -y ansible

          sudo rm -rf terraform || true

          # Install Terraform
          wget https://releases.hashicorp.com/terraform/1.11.2/terraform_1.11.2_linux_amd64.zip
          unzip -o terraform_1.11.2_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

          # Install Kubernetes CLI (kubectl)
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

          # Install ArgoCD CLI
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd-linux-amd64
          sudo mv argocd-linux-amd64 /usr/local/bin/argocd

      - name: Install Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Package environment as artifact
        run: |
          tar -czf environment.tar.gz /usr/local/bin/kubectl /usr/local/bin/argocd
          echo "🔹 Environment packaged."

      - name: Upload environment artifact
        uses: actions/upload-artifact@v4
        with:
          name: environment
          path: environment.tar.gz

  deploy-infrastructure:
    needs: setup-environment
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ansible-playbook

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download environment artifact
        uses: actions/download-artifact@v4
        with:
          name: environment
          path: ./artifacts

      - name: Extract environment
        run: |
          echo "🔹 Extracting environment..."
          sudo tar -xzf ../artifacts/environment.tar.gz -C /

          echo "🔹 Setting execution permissions..."
          sudo chmod +x /usr/local/bin/terraform
          sudo chmod +x /usr/local/bin/kubectl
          sudo chmod +x /usr/local/bin/argocd

          echo "🔹 Adding to PATH..."
          echo 'export PATH=$PATH:/usr/local/bin' >> ~/.bashrc
          export PATH=$PATH:/usr/local/bin

          # ✅ Verify installations
          echo "✅ Terraform version:"
          terraform --version
          echo "✅ kubectl version:"
          kubectl version --client
          echo "✅ ArgoCD version:"
          argocd version --client
          echo "✅ Java version:"
          java -version

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Deploy EKS and networking using Terraform
        run: |
          ansible-playbook deploy.yaml --tags terraform

      - name: Write Terraform outputs for EKS to params.txt (raw)
        run: |
          terraform output >> ${{ github.workspace }}/ansible-playbook/params.txt

      - name: Commit params.txt to repo
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add params.txt
          git commit -m "Update params.txt with Terraform outputs" || echo "No changes to commit"
          git push origin main || echo "No changes to push"

      - name: Get kubeconfig from EKS
        run: |
          echo "🔹 Generating kubeconfig..."
          aws eks update-kubeconfig --name main-eks-cluster --region ${{ secrets.AWS_REGION }}
          kubectl get nodes

      - name: Deploy ArgoCD using Ansible
        run: |
          echo "🔹 Deploying ArgoCD..."
          ansible-playbook deploy.yaml --tags argocd

      - name: Write Terraform outputs for EKS to params.txt (raw)
        run: |
          terraform output >> ${{ github.workspace }}/ansible-playbook/params.txt

      - name: Commit params.txt to repo
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add params.txt
          git commit -m "Update params.txt with Terraform outputs" || echo "No changes to commit"
          git push origin main || echo "No changes to push"

      - name: Deploy Jenkins dependencies using Ansible
        run: |
          echo "🔹 Deploying Jenkins dependencies..."
          ansible-playbook deploy.yaml --tags jenkins

      - name: Write Terraform outputs for EKS to params.txt (raw)
        run: |
          terraform output >> ${{ github.workspace }}/ansible-playbook/params.txt

      - name: Commit params.txt to repo
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add params.txt
          git commit -m "Update params.txt with Terraform outputs" || echo "No changes to commit"
          git push origin main || echo "No changes to push"

      - name: Deploy application through ArgoCD
        run: |
          echo "🔹 Deploying app..."
          ansible-playbook deploy.yaml --tags app

      - name: Configure GitHub in ArgoCD
        run: |
          echo "🔹 Configuring GitHub in ArgoCD..."
          ansible-playbook deploy.yaml --tags git

      - name: Configure Jenkins + GitHub
        run: |
          echo "🔹 Configuring Jenkins + GitHub..."
          ansible-playbook deploy.yaml --tags jenkins_setup

      - name: Deploy Prometheus and Grafana
        run: |
          echo "🔹 Deploying Prometheus and Grafana..."
          ansible-playbook deploy.yaml --tags monitoring_setup
